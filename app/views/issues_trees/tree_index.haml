- content_for(:header_tags) do
  = stylesheet_link_tag("jquery.treetable.theme.default.css", plugin: :redmine_issues_tree)
  = stylesheet_link_tag("jquery.treetable.css",               plugin: :redmine_issues_tree)
  = stylesheet_link_tag("custom_issues.css",                  plugin: :redmine_issues_tree)
  = javascript_include_tag("custom.jquery.treetable.js",      plugin: :redmine_issues_tree)
  = javascript_include_tag("tree.issues.initializer.js",      plugin: :redmine_issues_tree)

%div.contextual
  - is_user_allowed    = User.current.allowed_to?(:add_issues, @project, global: true)
  - is_targets_allowed = Issue.allowed_target_trackers(@project).any?
  - if is_user_allowed && (@project.nil? || is_targets_allowed)
    = link_to(l(:label_issue_new), _new_project_issue_path(@project), class: "icon icon-add new-issue")
  = actions_dropdown do
    - if @project
      = link_to(l(:field_summary), project_issues_report_path(@project), class: "icon icon-stats")
    - if User.current.allowed_to?(:import_issues, @project, global: true)
      = link_to(l(:button_import), new_issues_import_path(:project_id => @project), class: "icon icon-import")

    - options = { }
    - options[:controller] = "projects"
    - options[:action    ] = "settings"
    - options[:id        ] = @project
    - options[:tab       ] = "issues"
    - css_class            = User.current.allowed_to?(:manage_categories, @project) ? "icon icon-settings" : ""
    = link_to_if_authorized(l(:label_settings), options, class: css_class)

  = call_hook(:view_issues_tree_index_contextual, { issues: @issues, project: @project, query: @query })

%h2
  = @query.new_record? ? l(:label_issue_plural) : @query.name

- html_title(@query.new_record? ? l(:label_issue_plural) : @query.name)

= form_tag(tree_index_project_issues_trees_path(project_id: @project), 
           method: :get,
           id:     "query_form", 
           class:  "issues-tree-index-form", data: @tree_data) do
  = render(partial: "issues_trees/query_form")

- if @query.valid?
  - if @issues.empty?
    %p.nodata= l(:label_no_data)
  - else
    = render_query_totals(@query)
    = render(partial: "issues_trees/tree_list", locals: { issues: @issues, query: @query, issues_ids: @issues_ids })

= call_hook(:view_issues_index_bottom, { issues: @issues, project: @project, query: @query })

- content_for(:sidebar) do
  = render(partial: "issues/sidebar")

= context_menu